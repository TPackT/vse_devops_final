name: Build and test eshop workflow

on: 
  workflow_dispatch:
  push: 
    #branches:
     # - main
   

jobs:
  Install:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      
      
      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 14
      
      - name: Cache node modules
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install packages with npm
        run: |
          npm ci
  


  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      
      
      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 14
      
      - name: Cache node modules
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        run: | 
            npm rebuild node-sass --force
            npm run build -- --colors

      - name: Cache node modules and build folder
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{ runner.os }}-build-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-build-${{ github.run_id }}



  Test:
      needs: Install
      runs-on: ubuntu-latest

      steps:
        - name: Code checkout
          uses: actions/checkout@v4.1.1
          with:
            token: ${{ secrets.WORKFLOW_TOKEN }}
        
        
        - name: Setup NodeJS
          uses: actions/setup-node@v4.0.2
          with:
            node-version: 14
        
        - name: Cache node modules
          uses: actions/cache@v4.0.2
          with:
            path: node_modules
            key: node_modules-${{ hashFiles('**/package-lock.json') }}

        - name: Run tests
          run: | 
              npm run test -- --colors


  Deploy:
      needs: [ Build, Test ]
      if: ${{ github.ref == 'refs/heads/main' }}
      runs-on: ubuntu-latest

      steps:
        - name: Code checkout
          uses: actions/checkout@v4.1.1
          with:
            token: ${{ secrets.WORKFLOW_TOKEN }}

        - name: Setup Python
          uses: actions/setup-python@v5.1.0
          with:
            python-version: '3.x'

        - name: Install dependencies
          run: |
            sudo apt-get update
            sudo apt-get install -y python3-pip
            sudo pip3 install ansible boto boto3

        
        - name: Deploy to EC2
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          run: |
            echo "${{ secrets.AWS_PEM }}" > test.pem
            chmod 400 test.pem
            sudo ansible-playbook ansible/ec2_deploy.yml --user ec2-user --key-file test.pem -e "access_key=${AWS_ACCESS_KEY_ID}" -e "secret_key=${AWS_SECRET_ACCESS_KEY}" -e "session_token=${AWS_SESSION_TOKEN}"
            rm test.pem
          


        

            

            

            


          
            

